<% content_for :header do %>
<link rel="stylesheet" href="https://cdn.rawgit.com/novus/nvd3/v1.8.1/build/nv.d3.css">
<script src="https://d3js.org/d3.v3.min.js"></script>
<script src="https://cdn.rawgit.com/novus/nvd3/v1.8.1/build/nv.d3.min.js"></script>
<style>
.header,
.footer td{
  min-width: 55px;
  background-color: #EFEFEF;
}
</style>
<%end%>
<H2>Session: <%="#{@session.name} -- (#{@session.session_id})"%></H2>
<H4>Model: <%=@session.model_id%></H4>
<%if @model.nil?%>
  <div>
    There was a problem getting your model. The session which created it may exist while the model has been removed.
    <div class="alert alert-warning">
      <%=@message%>%
    </div>
  </div>
<%else%>
<div class="container">
<div class="row">
<div class="col-sm-6">
<H4>Data Source: <%=@session.datasource_name%></H4>
<label>Target column: </label><%=@session.target_column%>
<div>
<label>Algorithm:</label> <%= @model.algorithm.name %>
</div>
<% @session.metrics.each do |m|%>
<div>
  <label><%=m.name%></label> <%= "%.3f" % m.value %>
</div>
<%end%>
</div>
<div class="col-sm-6 right">
<h5>Helpful Information</h5>
  <ul>
    <li><a href="/results/contest/<%=@session.session_id%>"><label>Contestant Metrics</label></a></li>
    <%if @session.supports_feature_importance%>
    <li><a href="/results/featureimportance/<%=@session.session_id%>"><label>Feature Importance Scores</label></a></li>
    <%end%>
  </ul>
</div>
<%unless @actual.nil?%>
<div class="row">
  <div class="col-md-10">
  <h3>Results Visualization</h3>
  <%if @session.prediction_domain == 'classification'%>
   <table>
      <%@class_results.classes.sort.each_with_index do |c, i|%>
        <tr>
           <td class="header"><%=c%></td>
           <%unless @matrix[i].nil?%>
            <%@matrix[i].each do |valhash|%>
                <td style="width:55px;padding:5px;align:center;background-color:<%=valhash[:color]%>">
                  <%=valhash[:value]%>
                </td>
            <%end%>
           <%end%>
        </tr>
      <%end%>
      <tr class="footer">
        <td></td>
         <%@class_results.classes.sort.each do |c|%>
         <td>
          <%=c%>
         </td>
         <%end%>
      </tr>
    </table>
  <%else%>
   <div id="chart" style="height:400px">
    <svg><text x="100" y="100" font-family="sans-serif" font-size="10px" fill="red">If no chart, try refreshing the page</text></svg>
   </div>
  <%end%>
<%end%>
</div>
</div>
<hr/>
<div class="row">
<h3>Test Data</h3> 
  <%index = 0%>
  <table class="table table-striped">
    <th>
      <%=@session.target_column%> - Actual
    </th>
  <%@result_data.first.each do |k, _v|%>
    <th>
      <%=k%>
    </th>
  <%end%>
  <%@result_data.each do |data_hash|%>
    <tr>
      <td>
        <%if @actual.nil? || @actual.empty?%>
          No actual available
        <%else%>
          <%= @actual[index]["#{@session.target_column}:actual"] %>
        <%end%>
        <%index = index + 1%>
      </td>
      <%data_hash.each do |_k,v| %>
          <td>
              <%=v%>
          </td>
      <%end%>
     
    </tr>
  <%end%>
  </table>
  </div>
  </div>
</div>
<% content_for :before_body_end do %>
<script type="text/javascript" src="<%= asset_path('regression.js') %>"></script>
<script type="text/javascript">
$(document).ready(function(){
  var predValues = <%= render inline: @result_data.map { |r| r["#{@session.target_column}"] }.to_json%>;
  var observations = <%= render inline: @actual.map { |a| a["#{@session.target_column}:actual"] }.to_json %>;
  var dataKey = '<%=@session.target_column%>';
  observedValues = observations.map(function(c){if(c === ""){ return 0; } else { return parseFloat(c);}});
  predictedValues = predValues.map(function(c){return parseFloat(c);});
  graphValues = [];
  baseline = [];
  for (var i = 0; i < observedValues.length; i++) 
  {
      graphValues.push({
          x:  observedValues[i]
        ,y:  predictedValues[i]
      });
      baseline.push({x: observedValues[i], y: observedValues[i]});
  }
  regression = linearRegression.calculate(predictedValues, observedValues);

  function getChart(){
      nv.addGraph(function() {
              var chart = nv.models.scatterChart()
                      .margin({left: 100})  //Adjust chart margins to give the x-axis some breathing room.
                      .duration(350)  //how fast do you want the lines to transition?
                      .showLegend(true)       //Show the legend, allowing users to turn on/off line series.
                      .showYAxis(true)        //Show the y-axis
                      .showXAxis(true)        //Show the x-axis
      ;

      minY = d3.min(observedValues);
      maxY = d3.max(observedValues);
      minPredY = d3.min(predictedValues);
      maxPredY = d3.max(predictedValues);
      var yScale = d3.scale.linear().domain([minPredY,maxPredY]);
      chart.yAxis     //Chart y-axis settings
          .axisLabel(dataKey + " predicted")
          .scale(yScale)
          .tickFormat(d3.format(',f'));
      
      var xScale = d3.scale.linear;

      chart.xAxis     //Chart x-axis settings
          .axisLabel(dataKey + " observed")
          .scale(xScale);
      
      /* Done setting the chart up? Time to render it!*/
      var myData =  [{
          values: graphValues
          ,key: dataKey
          ,shape: 'circle'
          ,type: 'scatter'
      }
      ,{
        values: regression
        ,key: 'regression line'
        ,type: 'line'
        ,color: '#990000'
       }
       ,{
         values: baseline
         ,key: '1:1 baseline'
         ,type: 'line'
         ,color: '#04850d'
       }
      ]; 

      var chartSvg = d3.select('#chart svg');
      chartSvg.selectAll("*").remove(); //remove the text node warning of content problems.
      d3.select('#chart svg')    //Select the <svg> element you want to render the chart in.   
          .datum(myData)         //Populate the <svg> element with chart data...
          .call(chart);          //Finally, render the chart!
      
      //Update the chart when window resizes.
      nv.utils.windowResize(function() { chart.update() });
          return chart;
      });
  }
  setTimeout(getChart, 500);
})
</script>
<%end if @session.prediction_domain == 'regression'%>
<%end%>